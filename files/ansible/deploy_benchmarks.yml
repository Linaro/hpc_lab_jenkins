---
- hosts: target
  tasks:
        - name: Install dependencies on any Linux system
          package:
            state: present
            name: 
              - python3
              - python3-pip
              - git
              - build-essential
              - unzip
              - lhasa

        - name: Try to call perf, to see if it's installed at all
          shell: "perf --version"
          ignore_errors: True
          register: call_perf_test

        - name: Try to install perf depending on ansible_facts.os_family
          include_tasks: ./tasks/install_perf.yml
          when: call_perf_test.failed == True

        - name: IF THIS FAILS PLEASE INSTALL PERF MANUALLY
          shell: "perf --version"
          when: call_perf_test.failed == True

        - name: Install the testing repository on Debian
          apt_repository:
            repo: deb http://ftp.us.debian.org/debian testing main contrib non-free
            state: present

        - name: Set it as low priority
          lineinfile:
            path: /etc/apt/preferences
            insertafter: EOF
            create: yes
            line: "{{ item }}"
          with_items:
                  - "Package: *"
                  - "Pin: release a=testing"
                  - "Pin-Priority: 100"
                  - " "

        - name: Install GCC8 and Clang7
          apt:
            name:
              - g++-8
              - clang-7
            state: latest
            default_release: testing
            update_cache: yes

        - name: Wipe harness directory
          file:
              path: "benchmark_harness"
              state: "{{ item }}"
          with_items:
              - absent
              - directory

        - name: Get the benchmark_harness
          git:
              repo: https://github.com/Linaro/benchmark_harness.git
              dest: benchmark_harness
              version: "{{ branch | default('master') }}"

        - name: Install pip requirements
          shell: python3 -m pip install -r ./benchmark_harness/requirements.txt

        - name: Wipe results directory
          file:
              path: "results"
              state: "{{ item }}"
          with_items:
              - absent
              - directory

        - include_tasks: ./tasks/call_harness.yml

        - name: Find results
          find:
            paths: "results/"
            patterns: "^.*?\\.(?:err|out|manifest|stats)$"
            use_regex: yes
            recurse: yes
          register: reports_path
          failed_when: reports_path.matched == 0
        - debug: var=reports_path

        - include_tasks: ./tasks/put_sftp.yml
          vars:
            files_to_sftp: "{{ reports_path.filesÂ }}"
